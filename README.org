#+TITLE: JS's emacs config

* Package Manager

Setting up package.el (might have a look at other options but i dont realy see a reason too)

#+begin_src emacs-lisp :tangle init.el
  (require 'package)
  (setq package-archives '(("melpa" . "https://melpa.org/packages/")
                           ("org" . "https://orgmode.org/elpa/")
                           ("elpa" . "https://elpa.gnu.org/packages/")))

  (package-initialize)
  (unless package-archive-contents
    (package-refresh-contents))

  (unless (package-installed-p 'use-package)
    (package-install 'use-package))

  (require 'use-package)
  (setq use-package-always-ensure t)
#+end_src

* Clean-up

#+begin_src emacs-lisp :tangle init.el
  (setq custom-file "~/.config/emacs/custom.el")
  (load custom-file)
#+end_src

#+begin_src emacs-lisp :tangle init.el
  (setq make-backup-files nil)
  (setq create-lockfiles nil)
  (auto-save-visited-mode)
#+end_src

* Visuals

Removing visual clutter

#+begin_src emacs-lisp :tangle init.el
  (scroll-bar-mode -1)
  (tool-bar-mode -1)
  (tooltip-mode -1)
  (menu-bar-mode -1)
#+end_src

Line numbers

#+begin_src emacs-lisp :tangle init.el
  (setq display-line-numbers-type 'relative)
  (global-display-line-numbers-mode 1)
#+end_src

Emacs theme

#+begin_src emacs-lisp :tangle init.el
  (use-package doom-themes
    :config
    (load-theme 'doom-henna))
#+end_src

* Completions

#+begin_src emacs-lisp :tangle init.el
  (use-package vertico
    :init
    (vertico-mode))
#+end_src

#+begin_src emacs-lisp :tangle init.el
  (use-package marginalia
    :after vertico
    :init
    (marginalia-mode))
#+end_src

* Git

#+begin_src emacs-lisp :tangle init.el
   (use-package magit)
#+end_src

* Org

#+begin_src emacs-lisp :tangle init.el
  (use-package org-roam
    :custom
    (org-roam-directory (file-truename "~/Documents/roam/"))
    :bind (("C-c n l" . org-roam-buffer-toggle)
           ("C-c n f" . org-roam-node-find)
           ("C-c n g" . org-roam-graph)
           ("C-c n i" . org-roam-node-insert)
           ("C-c n c" . org-roam-capture))
    :config
    ;; If you're using a vertical completion framework, you might want a more informative completion interface
    (setq org-roam-node-display-template (concat "${title:*} " (propertize "${tags:10}" 'face 'org-tag)))
    (org-roam-db-autosync-mode))
#+end_src

* which-key

#+begin_src emacs-lisp :tangle init.el
  (use-package which-key
    :commands (which-key-mode)
    :init
    (which-key-mode))
#+end_src
